import java.util.Stack;

public class Solution {

		//Your code goes here
		public static int countBracketReversals(String input) 
        {
	    int len = input.length();

	    if (len == 0) 
        {
	        return 0;
	    }
	    if (len % 2 != 0) 
        {
	        return -1;  // Only even number of brackets can be balanced
	    }

	    Stack<Character> stack = new Stack<>();

	    for (int i = 0; i < len; i++) 
        {
	        char currentChar = input.charAt(i);

	        if (currentChar == '{') 
            {
	            stack.push(currentChar);
	        } 
            else 
            {
	            // Pop if there is a balanced pair
	            if (!stack.isEmpty() && stack.peek() == '{') 
                {
	                stack.pop();
	            }
                else 
                {
	                stack.push(currentChar);
	            }
	        }
	    }
int count = 0;

	    // Only unbalanced brackets are there in stack now
	    while (!stack.isEmpty()) 
        {
	        char char1 = stack.pop();
	        char char2 = stack.pop();

	        /*
	            When char1 = } and char2 = {, then we need to reverse both of them 
	            so count will increase by 2
	        */
	        if (char1 != char2) 
            {
	            count += 2;
	        } else {
	            count += 1;
	        }
	    }

	    return count;
	}

}
