import java.util.*;
public class Solution{
    
    static boolean isSubsetPresent(int[] arr, int n, int sum) {
    	
        int dp[][] = new int [n+10][sum+10];
        
        for (int row[] : dp)
            Arrays.fill(row, -1);
    
        return isSubsetPresent(arr, n, sum, dp);
    }
    
    static boolean isSubsetPresent(int[] arr, int n, int sum, int dp[][]) {
		
        if (sum < 0)
            return false;
        
        if (sum == 0)
            return true;
        
        if (n == 0)
            return false;
        
        if (dp[n][sum] != -1) {
            
            if (dp[n][sum] == 1)
                return true;
            
            else
                return false;
        }
        
        boolean opt1 = isSubsetPresent(arr, n-1, sum-arr[n-1], dp);
        
        if (opt1 == true) {
            
            dp[n][sum] = 1;
        }
        
        else {
            dp[n][sum] = 0;
        }
		
        boolean opt2 = isSubsetPresent(arr, n-1, sum, dp);

        if (opt2 == true) {
            
            dp[n][sum] = 1;
        }
        
        else {
            dp[n][sum] = 0;
        }

        return opt1 || opt2;
    }
}
