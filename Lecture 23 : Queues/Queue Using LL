/*
	Following is the structure of the node class for a Singly Linked List

	class Node {
		int data;
		Node next;

		public Node(int data) {
			this.data = data;
			this.next = null;
		}

	}

*/

public class Queue {

    private Node head;
    private Node tail;
    private int size;


    public Queue() {
        this.head = null;
        this.tail = null;
        this.size = 0;
    }



    /*----------------- Public Functions of Stack -----------------*/


    public int getSize() { 
        return this.size; 
    }


    public boolean isEmpty() { 
        return this.size == 0; 
    }


    public void enqueue(int data) {
        this.size += 1;
        Node newNode = new Node(data);

        if (head == null) {
            this.head = newNode;
            this.tail = newNode;
            return;
        }
        this.tail.next = newNode;
        this.tail = newNode;
    }



    public int dequeue() {
        if (this.isEmpty()) {
            return -1;
        }

        int ans = this.head.data;

        this.head = this.head.next;

        this.size -= 1;

        return ans;
    }


    public int front() {
        if (this.isEmpty())  {
            return -1;
        }

        return this.head.data;
    }
}
