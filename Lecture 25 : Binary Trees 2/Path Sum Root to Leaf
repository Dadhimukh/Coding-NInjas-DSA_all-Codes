/*
	
	Following is the structure used to represent the Binary Tree Node

	class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T data) {
			this.data = data;
			this.left = null;
			this.right = null;
		}
	}

*/

public class Solution {

		//Your code goes here
	public static void rootToLeafPathsSumToK(BinaryTreeNode<Integer> root, int k, String path, int currSum) {
		if(root == null) {
			return;
		}
		
		if (root.left == null && root.right == null) {
			currSum += root.data;
			
			if (currSum == k) {
				System.out.println((path + root.data + " "));
			}
			
			return;
		}
		
		rootToLeafPathsSumToK(root.left, k, (path + root.data + " "), (currSum + root.data));
		rootToLeafPathsSumToK(root.right, k, (path + root.data + " "), (currSum + root.data));
		
	}
	
	public static void rootToLeafPathsSumToK(BinaryTreeNode<Integer> root, int k) {
		rootToLeafPathsSumToK(root, k, "", 0);
	}

}
