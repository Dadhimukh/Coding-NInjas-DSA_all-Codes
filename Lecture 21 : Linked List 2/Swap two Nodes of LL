import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

/*

    Following is the Node class already written for the Linked List

    class LinkedListNode<T> {
        T data;
        LinkedListNode<T> next;
    
        public LinkedListNode(T data) {
            this.data = data;
        }
    }

*/
public class Solution {

	public static LinkedListNode<Integer> swapNodes(LinkedListNode<Integer> head, int i, int j) {
	    if(i == j)
	    {
	        return head;
	    }
	    
	    LinkedListNode<Integer> currentNode = head, prev = null;
	    LinkedListNode<Integer> firstNode = null, secondNode = null, firstNodePrev = null, secondNodePrev = null;
	    int pos = 0;
	    while (currentNode != null)
	    {
	        if (pos == i)
	        {
	            firstNodePrev = prev;
	            firstNode = currentNode;
	        }
	        else if (pos == j)
	        {
	            secondNodePrev = prev;
	            secondNode = currentNode;
	        }
	        prev = currentNode;
	        currentNode = currentNode.next;
	        pos++;
	}

	    if (firstNodePrev != null)
	    {
	        firstNodePrev.next = secondNode;
	    }
	    else
	    {
	        head = secondNode;
	    }

	    if (secondNodePrev != null)
	    {
	        secondNodePrev.next = firstNode;
	    }
	    else
	    {
	        head = firstNode;
	    }

	   LinkedListNode<Integer> currentFirstNode = secondNode.next;
	    secondNode.next = firstNode.next;
	    firstNode.next = currentFirstNode;

	    return head;
	}
}
