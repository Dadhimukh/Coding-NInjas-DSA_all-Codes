/*

    Following is the Node class already written for the Linked List

    class LinkedListNode<T> {
        T data;
        LinkedListNode<T> next;
    
        public LinkedListNode(T data) {
            this.data = data;
        }
    }

*/


public class Solution {

		//Your code goes here
	    public static LinkedListNode<Integer> evenAfterOdd(LinkedListNode<Integer> head) 
        {
	        
	        if (head == null) 
            {
	            return head;
	        }

	        LinkedListNode<Integer> evenHead = null, oddHead = null, evenTail = null, oddTail = null;

	        while (head != null)
            {
	            if (head.data % 2 == 0) 
                {
	                if (evenHead == null) 
                    {
	                    evenHead = head;
	                    evenTail = head;
	                } 
                    else 
                    {
	                    evenTail.next = head;
	                    evenTail = evenTail.next;
	                }
	            } else 
                {
	                if (oddHead == null) 
                    {
	                    oddHead = head;
	                    oddTail = head;
	                } else {
	                    oddTail.next = head;
	                    oddTail = oddTail.next;
	                }
	            }

	            head = head.next;
	        }

	        if (oddHead == null) 
            {
	            return evenHead;
	        } 
            else 
            {
	            oddTail.next = evenHead;
	        }

	        if (evenHead != null) 
            {
	            evenTail.next = null;
	        }

	        return oddHead;
	    }
	}

